from queue import Queue
#we have a graph and some vertices are lake(for examle when source 4 is a lake in list "z" z[4]=true)
#how many lakes we have?
def bfs_double(G,z):
    number=0
    q=Queue()
    visited=[False for i in range(len(G))]
    q.put(0)
    visited[0]=True
    while not q.empty():
        u=q.get()
        for i in G[u]:
            if visited[i]==False and z[i]!=True:
                    visited[i]=True
                    q.put(i)
            if visited[i]==False:
                q=Queue()
                q.put(u)
                visited[u]=True
                while not q.empty():
                    a=q.get()
                    for g in G[a]:
                        if visited[g]==False and z[g]==True:
                            visited[g]=True
                            q.put(g)
                number+=1
    print( number)



if __name__ == '__main__':
    z=[False,False,True,False,False,False,True,True,False]
    G=[[1,3,4],[0,2,3,4,5],[1,4,5],[0,1,4,6,7],[0,1,2,3,5,6,7,8],[1,2,4,7,8],[3,4,7],[3,4,5,6,8],[4,5,7]]
    bfs_double(G,z)
